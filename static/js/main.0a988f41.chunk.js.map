{"version":3,"sources":["components/Card.js","components/MoveCountLabel.js","svgs/award.svg","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Card","item","disableAction","onOpen","classNames","backfaceIsUp","push","className","join","onClick","event","type","MoveCountLabel","count","label","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","r","_ref3","points","SvgAward","_ref","svgRef","title","titleId","props","viewBox","width","height","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","ref","id","ForwardRef","delayOf","ms","args","Promise","resolve","setTimeout","Board","puzzle","onCompleted","showRecords","useState","Array","from","index","solution","setSolution","opened","setOpened","moveCount","setMoveCount","resetByIndex","filter","then","all","map","RecordsTable","data","setData","useEffect","propOrFunc","json","JSON","parse","localStorage","getItem","results","reduce","obj","style","marginTop","colSpan","sort","a","b","parseInt","timestamp","Math","max","Date","toLocaleDateString","navigator","language","year","month","day","rows","App","generatePuzzleData","rng","seedrandom","sizes","floor","columns","types","_","puzzleSet","randomIndex","splice","toString","getTime","newPuzzle","isOpen","setOpen","transition","useTransition","transform","opacity","enter","leave","alert","history","itemCount","setItem","stringify","onRequestClose","modalTransition","padding","textAlign","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a988f41.chunk.js","sourcesContent":["function Card({ item, disableAction, onOpen }) {\n  let classNames = [\"cell\", \"card\"]\n  if (item.backfaceIsUp) {\n    classNames.push(\"toggled\")\n  }\n\n  const clickHandler = (event) => {\n    if (!disableAction && !item.backfaceIsUp)\n      onOpen(item)\n  }\n\n  return (\n    <div className={classNames.join(\" \")} onClick={clickHandler}>\n      <div className=\"card-front\"></div>\n      <div className=\"card-back\">{item.type}</div>\n    </div>\n  )\n}\n\nexport default Card;\n","function MoveCountLabel({ count }) {\n  const label = (count === 1) ? \"move\" : \"moves\"\n  return (\n    <div className=\"move-label\">\n      {count} {label}\n    </div>\n  )\n}\n\nexport default MoveCountLabel\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 8,\n  r: 7\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"polyline\", {\n  points: \"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"\n});\n\nfunction SvgAward(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"css-i6dzq1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAward);\nexport default __webpack_public_path__ + \"static/media/award.3b0f2e15.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\nimport Card from \"./Card\";\nimport MoveCountLabel from \"./MoveCountLabel\";\nimport { ReactComponent as AwardIcon } from \"../svgs/award.svg\";\n\nconst delayOf = (ms, ...args) => {\n  return new Promise(resolve => setTimeout(resolve, ms, ...args))\n}\n\nfunction Board({ puzzle, onCompleted, showRecords }) {\n  const [solution, setSolution] = useState(() => {\n    return Array.from(puzzle, (item, index) => {\n      return { index: index, type: item.type, backfaceIsUp: false }\n    })\n  })\n\n  const [opened, setOpened] = useState([])\n\n  const [moveCount, setMoveCount] = useState(0)\n\n  const resetByIndex = (index) => {\n    solution[index].backfaceIsUp = false\n    setSolution([...solution])\n  }\n\n  const isCompleted = () => {\n    return (puzzle.length === solution.filter((item) => item.backfaceIsUp).length)\n  }\n\n  const onOpen = (item) => {\n    solution[item.index].backfaceIsUp = !solution[item.index].backfaceIsUp\n    setSolution([...solution])\n\n    opened.push(item.index)\n    setOpened([...opened])\n\n    if (opened.length >= 2) {\n      setMoveCount(moveCount + 1)\n\n      if (solution[opened[0]].type === solution[opened[1]].type) {\n        setOpened([])\n\n        if (isCompleted()) {\n          // FIXME: moveCount here won't be updated in either scope so its off by 1\n          delayOf(600, moveCount + 1).then((count) => {\n            onCompleted(count)\n          })\n        }\n      }\n      else {\n        Promise.all([\n          delayOf(600, opened[1]).then(resetByIndex),\n          delayOf(800, opened[0]).then(resetByIndex)\n        ]).then(() => {\n          setOpened([])\n        })\n      }\n    }\n  }\n\n  const renderCards = () => {\n    return solution.map((item, index) => {\n      return <Card key={index} item={item} onOpen={onOpen} disableAction={opened.length >= 2} />\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"full-grid disable-text-selection\">\n        { renderCards() }\n      </div>\n      <div className=\"footer-bar\">\n        <MoveCountLabel count={moveCount} />\n        <button className=\"button\" onClick={showRecords}>\n          <span className=\"icon\">\n            <AwardIcon />\n          </span>\n          Records\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Board;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport seedrandom from 'seedrandom';\nimport Board from \"./components/Board\";\n\nimport { BottomModal } from 'react-spring-modal';\nimport { useTransition } from 'react-spring';\n\nfunction RecordsTable() {\n  const groupBy = (array, propOrFunc) => {\n    return array.reduce(function (obj, item) {\n      var key = typeof propOrFunc === 'function' ? propOrFunc(item) : item[propOrFunc];\n\n      if (!obj.hasOwnProperty(key))\n        obj[key] = [];\n\n      obj[key].push(item);\n\n      return obj;\n    }, {});\n  };\n\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const json = JSON.parse(localStorage.getItem(\"completedGames\")) || []\n    const results = groupBy(json, \"moveCount\")\n    setData(results)\n  }, []);\n\n  const formatDate = (timestamp) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' }\n    return new Date(timestamp).toLocaleDateString(navigator.language, options)\n  }\n\n  const rows = () => {\n    if (Object.keys(data).length === 0) {\n      return <tr><td colSpan=\"3\" className=\"text-muted text-center\">No games played</td></tr>\n    }\n\n    const ascOrder = (a, b) => parseInt(a) - parseInt(b);\n\n    return Object.keys(data).sort(ascOrder).map(moveCount => (\n        <tr key={moveCount}>\n          <td>{moveCount}</td>\n          <td>{data[moveCount].length}</td>\n          <td>{formatDate(Math.max(...data[moveCount].map(i => i.timestamp)))}</td>\n        </tr>\n      )\n    )\n  }\n\n  return (\n    <div className=\"records-list\">\n      <p style={{marginTop: \"1rem\"}} className=\"text-muted\">Your objective is to solve puzzles in the fewest moves possible.</p>\n      <table style={{marginTop: \"30px\"}}>\n        <thead>\n          <tr>\n            <th>Moves</th>\n            <th>Games</th>\n            <th>Last Played</th>\n          </tr>\n        </thead>\n        <tbody>\n          { rows() }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nfunction App() {\n  const generatePuzzleData = () => {\n    const rng = seedrandom(\"Javier\");\n    const sizes = [ [4, 4] ]//, [4, 5] ]\n    const [columns, rows] = sizes[Math.floor(rng() * sizes.length)]\n    const numUniquePairs = (columns * rows) / 2;\n\n    let types = new Array(numUniquePairs).fill().map((_, index) => index + 1)\n    types.push(...types)\n\n    const puzzleSet = Array.from({length: columns * rows}, () => {\n      const randomIndex = Math.floor(rng() * types.length);\n      return { type: types.splice(randomIndex, 1)[0].toString() };\n    })\n\n    return { id: new Date().getTime(), puzzle: puzzleSet }\n  }\n\n  const [data, setData] = useState(() => generatePuzzleData())\n\n  const onCompleted = (moveCount) => {\n    alert(`You won in ${moveCount} moves!`)\n\n    let history = JSON.parse(localStorage.getItem(\"completedGames\")) || []\n    history.push({\n      itemCount: data.puzzle.length,\n      moveCount: moveCount,\n      timestamp: new Date().getTime(),\n    })\n    localStorage.setItem(\"completedGames\", JSON.stringify(history))\n\n    newPuzzle()\n  }\n\n  const newPuzzle = () => {\n    setData(generatePuzzleData())\n  }\n\n  const [isOpen, setOpen] = useState(false);\n\n  const showRecords = () => {\n    setOpen(true)\n  }\n\n  const transition = useTransition(isOpen, null, {\n    from: { transform: 'translateY(102%) translateX(-50%)', opacity: 0.7 },\n    enter: { transform: 'translateY(0) translateX(-50%)', opacity: 1 },\n    leave: { transform: 'translateY(102%) translateX(-50%)', opacity: 0.5 },\n  });\n\n  return(\n    <div className=\"app-container\">\n      <Board key={data.id} puzzle={data.puzzle} onCompleted={onCompleted} showRecords={showRecords} />\n      <BottomModal isOpen={isOpen} onRequestClose={() => setOpen(false)} modalTransition={transition}>\n        <div style={{padding: \"1rem\", textAlign: \"center\", width: \"100%\"}}>\n          <button style={{width: \"80%\", justifyContent: \"center\"}} className=\"button\" onClick={() => setOpen(false)}>\n            Close\n          </button>\n        </div>\n        <RecordsTable />\n      </BottomModal>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}